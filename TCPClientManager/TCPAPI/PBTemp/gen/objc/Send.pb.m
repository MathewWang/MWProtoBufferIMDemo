// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Send.pb.h"

@implementation SendRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SendRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SendReq ()
@property (retain) NSString* userName;
@property (retain) NSString* toUserName;
@property (retain) NSString* content;
@end

@implementation SendReq

- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value {
  hasUserName_ = !!value;
}
@synthesize userName;
- (BOOL) hasToUserName {
  return !!hasToUserName_;
}
- (void) setHasToUserName:(BOOL) value {
  hasToUserName_ = !!value;
}
@synthesize toUserName;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.userName = nil;
  self.toUserName = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userName = @"";
    self.toUserName = @"";
    self.content = @"";
  }
  return self;
}
static SendReq* defaultSendReqInstance = nil;
+ (void) initialize {
  if (self == [SendReq class]) {
    defaultSendReqInstance = [[SendReq alloc] init];
  }
}
+ (SendReq*) defaultInstance {
  return defaultSendReqInstance;
}
- (SendReq*) defaultInstance {
  return defaultSendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasToUserName) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserName) {
    [output writeString:1 value:self.userName];
  }
  if (self.hasToUserName) {
    [output writeString:2 value:self.toUserName];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserName) {
    size += computeStringSize(1, self.userName);
  }
  if (self.hasToUserName) {
    size += computeStringSize(2, self.toUserName);
  }
  if (self.hasContent) {
    size += computeStringSize(3, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SendReq*) parseFromData:(NSData*) data {
  return (SendReq*)[[[SendReq builder] mergeFromData:data] build];
}
+ (SendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendReq*)[[[SendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendReq*) parseFromInputStream:(NSInputStream*) input {
  return (SendReq*)[[[SendReq builder] mergeFromInputStream:input] build];
}
+ (SendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendReq*)[[[SendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendReq*)[[[SendReq builder] mergeFromCodedInputStream:input] build];
}
+ (SendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendReq*)[[[SendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendReq_Builder*) builder {
  return [[[SendReq_Builder alloc] init] autorelease];
}
+ (SendReq_Builder*) builderWithPrototype:(SendReq*) prototype {
  return [[SendReq builder] mergeFrom:prototype];
}
- (SendReq_Builder*) builder {
  return [SendReq builder];
}
@end

@interface SendReq_Builder()
@property (retain) SendReq* result;
@end

@implementation SendReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SendReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendReq_Builder*) clear {
  self.result = [[[SendReq alloc] init] autorelease];
  return self;
}
- (SendReq_Builder*) clone {
  return [SendReq builderWithPrototype:result];
}
- (SendReq*) defaultInstance {
  return [SendReq defaultInstance];
}
- (SendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendReq*) buildPartial {
  SendReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SendReq_Builder*) mergeFrom:(SendReq*) other {
  if (other == [SendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasToUserName) {
    [self setToUserName:other.toUserName];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserName:[input readString]];
        break;
      }
      case 18: {
        [self setToUserName:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (SendReq_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (SendReq_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
- (BOOL) hasToUserName {
  return result.hasToUserName;
}
- (NSString*) toUserName {
  return result.toUserName;
}
- (SendReq_Builder*) setToUserName:(NSString*) value {
  result.hasToUserName = YES;
  result.toUserName = value;
  return self;
}
- (SendReq_Builder*) clearToUserName {
  result.hasToUserName = NO;
  result.toUserName = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (SendReq_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (SendReq_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

@interface SendRes ()
@property int32_t resCode;
@property (retain) NSString* fromUserName;
@property (retain) NSString* content;
@end

@implementation SendRes

- (BOOL) hasResCode {
  return !!hasResCode_;
}
- (void) setHasResCode:(BOOL) value {
  hasResCode_ = !!value;
}
@synthesize resCode;
- (BOOL) hasFromUserName {
  return !!hasFromUserName_;
}
- (void) setHasFromUserName:(BOOL) value {
  hasFromUserName_ = !!value;
}
@synthesize fromUserName;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.fromUserName = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.resCode = 0;
    self.fromUserName = @"";
    self.content = @"";
  }
  return self;
}
static SendRes* defaultSendResInstance = nil;
+ (void) initialize {
  if (self == [SendRes class]) {
    defaultSendResInstance = [[SendRes alloc] init];
  }
}
+ (SendRes*) defaultInstance {
  return defaultSendResInstance;
}
- (SendRes*) defaultInstance {
  return defaultSendResInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResCode) {
    [output writeInt32:1 value:self.resCode];
  }
  if (self.hasFromUserName) {
    [output writeString:3 value:self.fromUserName];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResCode) {
    size += computeInt32Size(1, self.resCode);
  }
  if (self.hasFromUserName) {
    size += computeStringSize(3, self.fromUserName);
  }
  if (self.hasContent) {
    size += computeStringSize(4, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SendRes*) parseFromData:(NSData*) data {
  return (SendRes*)[[[SendRes builder] mergeFromData:data] build];
}
+ (SendRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendRes*)[[[SendRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendRes*) parseFromInputStream:(NSInputStream*) input {
  return (SendRes*)[[[SendRes builder] mergeFromInputStream:input] build];
}
+ (SendRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendRes*)[[[SendRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendRes*)[[[SendRes builder] mergeFromCodedInputStream:input] build];
}
+ (SendRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendRes*)[[[SendRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendRes_Builder*) builder {
  return [[[SendRes_Builder alloc] init] autorelease];
}
+ (SendRes_Builder*) builderWithPrototype:(SendRes*) prototype {
  return [[SendRes builder] mergeFrom:prototype];
}
- (SendRes_Builder*) builder {
  return [SendRes builder];
}
@end

@interface SendRes_Builder()
@property (retain) SendRes* result;
@end

@implementation SendRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SendRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendRes_Builder*) clear {
  self.result = [[[SendRes alloc] init] autorelease];
  return self;
}
- (SendRes_Builder*) clone {
  return [SendRes builderWithPrototype:result];
}
- (SendRes*) defaultInstance {
  return [SendRes defaultInstance];
}
- (SendRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendRes*) buildPartial {
  SendRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SendRes_Builder*) mergeFrom:(SendRes*) other {
  if (other == [SendRes defaultInstance]) {
    return self;
  }
  if (other.hasResCode) {
    [self setResCode:other.resCode];
  }
  if (other.hasFromUserName) {
    [self setFromUserName:other.fromUserName];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResCode:[input readInt32]];
        break;
      }
      case 26: {
        [self setFromUserName:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasResCode {
  return result.hasResCode;
}
- (int32_t) resCode {
  return result.resCode;
}
- (SendRes_Builder*) setResCode:(int32_t) value {
  result.hasResCode = YES;
  result.resCode = value;
  return self;
}
- (SendRes_Builder*) clearResCode {
  result.hasResCode = NO;
  result.resCode = 0;
  return self;
}
- (BOOL) hasFromUserName {
  return result.hasFromUserName;
}
- (NSString*) fromUserName {
  return result.fromUserName;
}
- (SendRes_Builder*) setFromUserName:(NSString*) value {
  result.hasFromUserName = YES;
  result.fromUserName = value;
  return self;
}
- (SendRes_Builder*) clearFromUserName {
  result.hasFromUserName = NO;
  result.fromUserName = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (SendRes_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (SendRes_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

